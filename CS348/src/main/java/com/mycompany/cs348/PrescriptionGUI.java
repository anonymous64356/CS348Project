/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cs348;

import static com.mycompany.cs348.CS348.getResultFromQuery;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Joseph Murphy
 */
public class PrescriptionGUI extends javax.swing.JFrame {

    /**
     * Creates new form PerscriptionGUI
     */
    
    private ArrayList<String[]> patientResult = new ArrayList<>();
    private ArrayList<String> prescriptionIDs = new ArrayList<>();
    private String patientString = "";
    
    public PrescriptionGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientText = new javax.swing.JTextField();
        employeeText = new javax.swing.JTextField();
        getPrescriptions = new javax.swing.JButton();
        prescriptionInfoPane = new javax.swing.JScrollPane();
        prescriptionInfo = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        prescriptionSelect = new javax.swing.JComboBox<>();
        refillButton = new javax.swing.JButton();
        prescriptionText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patientText.setToolTipText("Enter Employee ID");
        patientText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTextActionPerformed(evt);
            }
        });
        patientText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patientTextKeyPressed(evt);
            }
        });

        employeeText.setToolTipText("Enter Employee ID");
        employeeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeTextActionPerformed(evt);
            }
        });

        getPrescriptions.setText("Get Prescriptions");
        getPrescriptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getPrescriptionsActionPerformed(evt);
            }
        });

        prescriptionInfo.setVisible(false);
        prescriptionInfo.setEditable(false);
        prescriptionInfo.setColumns(20);
        prescriptionInfo.setRows(5);
        prescriptionInfoPane.setViewportView(prescriptionInfo);

        jLabel1.setText("Employee ID:");

        jLabel2.setText("Patient ID:");

        prescriptionSelect.setVisible(false);
        prescriptionSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0" }));
        prescriptionSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescriptionSelectActionPerformed(evt);
            }
        });

        refillButton.setVisible(false);
        refillButton.setText("Refill Prescription");

        prescriptionText.setVisible(false);
        prescriptionText.setText("Select Prescription:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(employeeText)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                        .addComponent(prescriptionText, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                    .addComponent(refillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prescriptionSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prescriptionInfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(patientText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(getPrescriptions)))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getPrescriptions))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prescriptionInfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prescriptionText)
                        .addGap(12, 12, 12)
                        .addComponent(prescriptionSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(refillButton)))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void patientTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientTextActionPerformed
 
    private void getPrescriptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getPrescriptionsActionPerformed
        prescriptionInfo.setText("");
        String patientID = patientText.getText();
        String doctorID = employeeText.getText();
        ResultSet result = getResultFromQuery(String.format("SELECT * FROM Patients WHERE Patient_ID = %s", patientID));
        if (patientResult != null) {
            try {
                result.next();
                patientString = result.getString("Name");
                prescriptionInfo.append("Patient Name: " + patientString);
            } catch (SQLException ex) {
                Logger.getLogger(PrescriptionGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        result = getResultFromQuery(String.format("CALL getPatientPrescriptions(%s, %s)", patientID, doctorID));
        try {
            prescriptionIDs.clear();
            patientResult.clear();
            while (result.next()) {
                String[] resultArray = new String[7]; //don't include patientID and employeeID because we don't care
                prescriptionIDs.add(result.getString("prescriptionID"));
                resultArray[0] = result.getString("prescriptionID");
                resultArray[1] = result.getString("medicineID");
                resultArray[2] = result.getString("quantity");
                resultArray[3] = result.getString("cost");
                resultArray[4] = result.getString("frequency");
                resultArray[5] = result.getDate("lastFilled").toString();
                resultArray[6] = result.getDate("nextFill").toString();
                patientResult.add(resultArray);
            }
            prescriptionIDs.add("Create New..."); //select this on wheel to create new prescription
        } catch (SQLException ex) {
            Logger.getLogger(PrescriptionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        prescriptionSelect.setModel(new DefaultComboBoxModel(prescriptionIDs.toArray()));
        prescriptionSelect.setVisible(true);
        prescriptionInfo.setVisible(true);
        prescriptionText.setVisible(true);
        refillButton.setVisible(true);
        prescriptionSelectActionPerformed(null);
    }//GEN-LAST:event_getPrescriptionsActionPerformed

    private void employeeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeTextActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_employeeTextActionPerformed

    private void prescriptionSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescriptionSelectActionPerformed
            // TODO add your handling code here:
        int i = prescriptionSelect.getSelectedIndex(); //shift everything by one because SQL starts at 1
        if (i == prescriptionIDs.size() - 1) {//if last item is selected, new prescription is created
            System.out.println("yippie!");
            return;
        }
        
        try {
            String[] result = patientResult.get(i);
            prescriptionInfo.setText("Patient Name: " + patientString);
            prescriptionInfo.append("\nPrescription ID: " + result[0]);
            ResultSet medicineName = getResultFromQuery(String.format("SELECT * FROM medicine WHERE medicineID = %s", result[1]));
            medicineName.next();
            prescriptionInfo.append("\nMedicine: " + medicineName.getString("name"));
            prescriptionInfo.append("\nQuantity: " + result[2]);
            prescriptionInfo.append("\nCost: $" + result[3]);
            prescriptionInfo.append("\nFrequency: Every " + result[4] + " Days");
            prescriptionInfo.append("\nLast Filled: " + result[5]);
            prescriptionInfo.append("\nNext Fill: ");
            if (result[6] == null)
                prescriptionInfo.append("No more refills");
            else
                prescriptionInfo.append(result[6]);
        } catch (SQLException ex) {
            Logger.getLogger(PrescriptionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_prescriptionSelectActionPerformed

    private void patientTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientTextKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            getPrescriptions.doClick();
    }//GEN-LAST:event_patientTextKeyPressed
               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrescriptionGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField employeeText;
    private javax.swing.JButton getPrescriptions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField patientText;
    private javax.swing.JTextArea prescriptionInfo;
    private javax.swing.JScrollPane prescriptionInfoPane;
    private javax.swing.JComboBox<String> prescriptionSelect;
    private javax.swing.JLabel prescriptionText;
    private javax.swing.JButton refillButton;
    // End of variables declaration//GEN-END:variables
}
